generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    Int          @id @default(autoincrement())
  name                  String
  email                 String       @unique
  password              String
  emailVerifiedAt       DateTime?
  googleId              String?      @unique
  profilePicture        String?

  createdAt             DateTime     @default(now())
  updatedAt             DateTime     @updatedAt

  transactions          Transaction[]
  emailVerificationTokens EmailVerificationToken[]
  passwordResetTokens   PasswordResetToken[]
}

model Transaction {
  id          Int             @id @default(autoincrement())
  category    String
  description String
  amount      Float
  type        TransactionType
  date        DateTime        @default(now())
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  userId      Int

  user        User            @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([date])
}

model EmailVerificationToken {
  id         Int       @id @default(autoincrement())
  userId     Int       @unique
  tokenHash  String    @unique
  expiresAt  DateTime
  usedAt     DateTime? // ðŸ”¹ e re - shÃ«non kur u pÃ«rdor token-i
  createdAt  DateTime  @default(now())
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([expiresAt])
  @@index([usedAt])
}

model PasswordResetToken {
  id        Int      @id @default(autoincrement())
  userId    Int
  tokenHash String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([expiresAt])
}

enum TransactionType {
  INCOME
  EXPENSE
}